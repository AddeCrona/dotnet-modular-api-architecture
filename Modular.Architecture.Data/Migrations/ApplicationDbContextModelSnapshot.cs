// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modular.Architecture.Data;

#nullable disable

namespace Modular.Architecture.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Catalog.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 120.50m,
                            ProductName = "Schampoo deluxe",
                            ProductNumber = "T-1234-ab23"
                        },
                        new
                        {
                            Id = 2,
                            Price = 119.50m,
                            ProductName = "Soap deluxe",
                            ProductNumber = "T-1654-cf54"
                        },
                        new
                        {
                            Id = 3,
                            Price = 59.99m,
                            ProductName = "Comb",
                            ProductNumber = "T-9865-hk94"
                        },
                        new
                        {
                            Id = 4,
                            Price = 99.50m,
                            ProductName = "Toilet paper",
                            ProductNumber = "T-4567-tf34"
                        },
                        new
                        {
                            Id = 5,
                            Price = 29.99m,
                            ProductName = "Hair spray",
                            ProductNumber = "T-1276-ww33"
                        });
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartId = 1,
                            ProductId = 2,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 2,
                            CartId = 1,
                            ProductId = 1,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 3,
                            CartId = 1,
                            ProductId = 4,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 4,
                            CartId = 2,
                            ProductId = 3,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 5,
                            CartId = 2,
                            ProductId = 5,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidPrice")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.CartItem", b =>
                {
                    b.HasOne("Modular.Architeture.Core.Domain.Ecommerce.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modular.Architeture.Core.Domain.Catalog.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.OrderItem", b =>
                {
                    b.HasOne("Modular.Architeture.Core.Domain.Ecommerce.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Modular.Architeture.Core.Domain.Ecommerce.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
